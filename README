MySQL UDF for IPv6

This is an experimental runtime plug-in (UDF) for MySQL
that adds some basic IPv6 functions that MySQL is still lacking:
inet_ntop(3) and inet_pton(3).

These files are experimental and provided as-is under a GPL license.

Pieter Ennes (pieter@watchmouse.com)
Â©2009 WatchMouse


DISCLAMER
---------

These plug-ins should be considered alpha quality at best. The install instructions are only for Debian GNU/Linux (etch/lenny) at the moment.


INSTALLATION
------------

Install required compile time dependencies, on Debian you probably catch most of them with:

    $ apt-get install libmysqlclient-dev

Compile the UDF:

    $ wget http://labs.watchmouse.com/mysql-udf-ipv6-latest.tar.gz
    $ tar xvfz mysql-udf-ipv6-latest.tar.gz
    $ cd mysql-udf-ipv6-[version]
    $ make

Install the shared object in your library search path:

    $ sudo make install

Note that the plug-in install path has changed around MySQL version 5.0.67, make sure to select the correct path in the Makefile.


USAGE
-----

mysql> CREATE FUNCTION inet6_ntop RETURNS STRING SONAME "mysql_udf_ipv6.so";
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE FUNCTION inet6_pton RETURNS STRING SONAME "mysql_udf_ipv6.so";
Query OK, 0 rows affected (0.00 sec)

mysql> CREATE FUNCTION inet6_rlookupn RETURNS STRING SONAME "mysql_udf_ipv6.so";
Query OK, 0 rows affected (0.00 sec)

Unload them with:
mysql> drop function inet6_rlookup; drop function inet6_pton; drop function inet6_ntop;


EXAMPLES
--------

Notation conversion functions:

mysql> select inet6_ntop(inet6_pton('2001:4860:a005::68')), inet6_ntop(inet6_pton('1.2.3.4'));
+----------------------------------------------+-----------------------------------+
| inet6_ntop(inet6_pton('2001:4860:a005::68')) | inet6_ntop(inet6_pton('1.2.3.4')) |
+----------------------------------------------+-----------------------------------+
| 2001:4860:a005::68                           | 1.2.3.4                           | 
+----------------------------------------------+-----------------------------------+
1 row in set (0.00 sec)

mysql> select length(inet6_pton('2001:4860:a005::68')), length(inet6_pton('1.2.3.4'));
+------------------------------------------+-------------------------------+
| length(inet6_pton('2001:4860:a005::68')) | length(inet6_pton('1.2.3.4')) |
+------------------------------------------+-------------------------------+
|                                       16 |                             4 | 
+------------------------------------------+-------------------------------+
1 row in set (0.00 sec)

You can neatly store the output of inet6_pton() in a VARBINARY(16) column.

Lookup functions:

mysql> select inet6_rlookupn(inet6_pton('2001:4860:a005::68')), inet6_rlookupn(inet6_pton('64.128.190.61'));
+--------------------------------------------------+---------------------------------------------+
| inet6_rlookupn(inet6_pton('2001:4860:a005::68')) | inet6_rlookupn(inet6_pton('64.128.190.61')) |
+--------------------------------------------------+---------------------------------------------+
| ey-in-x68.google.com                             | ny.watchmouse.com                           | 
+--------------------------------------------------+---------------------------------------------+
1 row in set (0.03 sec)

Don't push too many rows through the lookup function, as each lookup may take many seconds to complete.